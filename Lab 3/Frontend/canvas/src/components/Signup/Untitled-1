import React, {Component} from "react";
import '../../App.css';
import axios from 'axios';
import ReactDOM from 'react-dom';
import cookie from 'react-cookies';
import {Redirect} from 'react-router';


const sjsuLogo = {
    src: require('../../assets/sjsu.png'),
    alt: 'sjsu_image',
}

// Signup Component
class Signup extends Component{
    // constructor
    constructor(props){
        super(props);
        // State variable for signup component
        this.state = {
            studentName: "",
            email: "",
            role: "",
            userId: "",
            password: "",
            authFlag: "",
        }

        // Binding the handlers
        this.studentNameChangeHandler = this.studentNameChangeHandler.bind(this);
        this.emailChangeHandler = this.emailChangeHandler.bind(this);
        this.roleChangeHandler = this.roleChangeHandler.bind(this);
        this.userIdChangeHandler = this.userIdChangeHandler.bind(this);
        this.passwordChangeHandler = this.passwordChangeHandler.bind(this);
        this.submitSignup = this.submitSignup.bind(this);
    }


    // Calling the willMount and setting the authFlag to false
    componentWillMount(){
        this.setState({
            authFlag: false
        })
    }


    // studentNameChangeHandler updates the state variable with the text entered by user
    studentNameChangeHandler = (event) => { 
        this.setState({
            studentName: event.target.value
        })
    }

    // emailChangeHandler updates the state variable with the text entered by user
    emailChangeHandler = (event) => { 
        this.setState({
            email: event.target.value
        })
    }

    // roleChangeHandler updates the state variable with the text entered by user
    roleChangeHandler = (event) => { 
        this.setState({
            role: event.target.value
        })
    }

    // userIdChangeHandler updates the state variable with the text entered by user
    userIdChangeHandler = (event) => { 
        this.setState({
            userId: event.target.value
        })
    }

    // passwordChangeHandler updates the state variable with the text entered by user
    passwordChangeHandler = (event) => {
        this.setState({
            password: event.target.value
        })
    }

    //submitSignup handler to send a request to the node backend
    submitSignup = (event) => {

        // prevents page from refresh
        event.preventDefault();

        const data = {
            studentName: this.state.studentName,
            email: this.state.email,
            role: this.state.role,
            userId: this.state.userId,
            password: this.state.password,
        }

        // setting the withCredentials to true
        axios.defaults.withCredentials = true;
        // make a post request to the backend to authenticate the user
        axios.post('http://localhost:3001/signup',data).then(response => {
            console.log("Status Code: ",response.status);
            if(response.status === 200){
                this.setState({
                    authFlag : true
                })
            }else{
                this.setState({
                    authFlag: false
                })
            }
        });
    }


    // render method
    render(){
        // //redirect based on successful signup
        // let redirect = null;
        // if(cookie.load('signup')){
        //     redirect = <Redirect to= '/login' />
        // }

        return(
            <div>
                {/* {redirect} */}
                <div className = "container" >
                    <div className = "nav"> 
                        <h2>Connecting to MySJSU</h2>
                        <hr />
                    </div>
                    <br />
                    <br />
                    <br />
                    <br />
                    <div className = "login-form">
                        <div className = "main-div">
                            <div className="panel">
                                <img src = {sjsuLogo.src} alt = {sjsuLogo.alt} />
                                <br />
                            </div>
                            <hr />
                            <br />
                            <h2>Sign up</h2>
                            <div className="form-group">
                                {/* User Name  */}
                                <input onChange = {this.studentNameChangeHandler} type="text" className="form-control" name="studentName" placeholder="Student Name"/>
                            </div>

                            <div className="form-group">
                                {/* User Email */}
                                <input onChange = {this.emailChangeHandler} type="text" className="form-control" name="email" placeholder="Student Email"/>
                            </div>

                            <div className="form-group" data-toggle="buttons">
                                {/* ROLE */}
                                <label className = "btn btn-outline-primary" >
                                    <input onChange = {this.roleChangeHandler} type="radio" className="form-control" name="role" id="Student" value="Student"/>
                                    <label className = "form-check-label" htmlFor="Student">Student</label>
                                </label>
                                <label className = "btn btn-outline-primary" >
                                    <input onChange = {this.roleChangeHandler} type="radio" className="form-control" name="role" id="Faculty" value="Faculty"/>
                                    <label className = "form-check-label" htmlFor="Faculty">Faculty</label>
                                </label>
                            </div>

                            <div className="form-group">
                                {/* Student/Faculty ID */}
                                <input onChange = {this.userIdChangeHandler} type="text" className="form-control" name="userId" placeholder={this.state.role === 'Faculty' ? 'Faculty ID' : 'Student ID'}/>
                            </div>

                            <div className="form-group">
                                {/* Password */}
                                <input onChange = {this.passwordChangeHandler} type="password" className="form-control" name="password" placeholder="Password"/>
                            </div>

                            {/* Submit button */}
                            <button onClick = {this.submitLogin} className="btn btn-success">SIGN UP</button>
                            <br />

                        </div>
                    </div>
                </div>

            </div>
        );
    }

}

//export Signup Component
export default Signup;